/*! Sugarizer 2017-09-04 */
define(function(a){function b(){var a=function(){},b=a,c=a,d=a,e=a,f=a,g=a,h=a,i=a;k=[a,b,c,d,e,f,g,h,i],this.socket=null,this.registerMessageHandler=function(){this.socket.onmessage=function(a){var b=a.data;try{var c=JSON.parse(b)}catch(a){return void console.log("Presence API error, this doesn't look like a valid JSON: ",b)}c.type<k.length?k[c.type](c.data):console.log("Presence API error, unknown callback type:"+c.type)}},this.registerUser=function(){this.socket.send(JSON.stringify(this.userInfo))}}var c=1,d=2,e=3,f=4,g=5,h=6,i=7,j=8,k=[],l=new b;return b.prototype.isConnected=function(){return null!=this.socket},b.prototype.getUserInfo=function(){return this.userInfo},b.prototype.getSharedInfo=function(){return this.sharedInfo},b.prototype.joinNetwork=function(a){window.WebSocket||(console.log("WebSocket not supported"),a({code:-1},l));var b=location.hostname;if(localStorage.sugar_settings){var c=JSON.parse(localStorage.sugar_settings);if(c.server){b=c.server;var d=b.indexOf(":");d==-1&&(d=b.indexOf("/")),d==-1&&(d=b.length),b=b.substring(0,d)}}this.socket=new WebSocket("ws://"+b+":8039"),this.socket.onerror=function(b){console.log("WebSocket Error: "+b),a(b,l),this.socket=null};var e=this;this.socket.onopen=function(b){var c=JSON.parse(localStorage.sugar_settings);e.userInfo={name:c.name,networkId:c.networkId,colorvalue:c.colorvalue},e.registerMessageHandler(),e.registerUser(),a(null,l)},this.socket.onclose=function(a){k[h](a)}},b.prototype.leaveNetwork=function(){this.isConnected()&&this.socket.close()},b.prototype.listUsers=function(a){if(this.isConnected()){k[c]=a;var b=JSON.stringify({type:c});this.socket.send(b)}},b.prototype.createSharedActivity=function(a,b){if(this.isConnected()){var c=this;k[d]=function(a){c.sharedInfo={id:a},b(a)};var e=JSON.stringify({type:d,activityId:a});this.socket.send(e)}},b.prototype.listSharedActivities=function(a){if(this.isConnected()){k[e]=a;var b=JSON.stringify({type:e});this.socket.send(b)}},b.prototype.joinSharedActivity=function(a,b){if(this.isConnected()){var c=this;k[f]=function(a){c.sharedInfo=a,b(a)};var d=JSON.stringify({type:f,group:a});this.socket.send(d)}},b.prototype.leaveSharedActivity=function(a,b){if(this.isConnected()){k[g]=b;var c=JSON.stringify({type:g,group:a});this.socket.send(c)}},b.prototype.onConnectionClosed=function(a){k[h]=a},b.prototype.onSharedActivityUserChanged=function(a){k[i]=a},b.prototype.sendMessage=function(a,b){if(this.isConnected()){var c=JSON.stringify({type:j,group:a,data:b});this.socket.send(c)}},b.prototype.onDataReceived=function(a){k[j]=a},l});