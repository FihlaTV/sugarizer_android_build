/*! Sugarizer 2017-09-04 */
enyo.kind({name:"VideoViewer.Item",kind:enyo.Control,published:{code:"",title:"",category:"",isFavorite:!1,image:""},events:{onVideoPlayed:""},classes:"item",components:[{name:"spinner",kind:"Image",src:"images/spinner-dark.gif",classes:"spinner"},{name:"background",classes:"itemImage",kind:"Image",src:"images/notloaded.png"},{name:"itemImage",classes:"itemImage",kind:"Image",showing:!1,onload:"imageLoaded",onerror:"defaultImage",ontap:"showVideo"},{name:"itemPlay",classes:"itemPlay",kind:"Image",showing:!1,src:"icons/play.svg",ontap:"showVideo"},{name:"itemFavorite",classes:"itemFavorite",kind:"Image",src:"icons/notfavorite.svg",showing:!1,ontap:"showVideo"},{name:"itemOverlay",classes:"itemOverlay"},{name:"itemTitle",classes:"itemTitle",content:""}],create:function(){this.inherited(arguments),this.nameChanged(),this.titleChanged(),this.isFavoriteChanged()},nameChanged:function(){var a=(this.image?this.image:"",this.replaceValues(Util.getImages()));if("undefined"!=typeof chrome&&chrome.app&&chrome.app.runtime){var b=new XMLHttpRequest,c=this;b.open("GET",a,!0),b.responseType="blob",b.onload=function(a){c.$.itemImage.setAttribute("src",window.URL.createObjectURL(this.response))},b.send()}else this.$.itemImage.setAttribute("src",a)},titleChanged:function(){this.$.itemTitle.setContent(this.title)},isFavoriteChanged:function(){this.$.itemFavorite.setShowing(this.isFavorite)},imageLoaded:function(){this.$.itemImage.setShowing(!0),this.$.itemPlay.setShowing(!0),this.$.spinner.setShowing(!1),this.$.background.setShowing(!1)},defaultImage:function(){this.$.itemImage.setAttribute("src","images/notloaded.png"),this.$.itemImage.setShowing(!0),this.$.itemPlay.setShowing(!0),this.$.spinner.setShowing(!1),this.$.background.setShowing(!1)},replaceValues:function(a){var b=a;return b=b.replace(new RegExp("%id%","g"),this.code),b=b.replace(new RegExp("%image%","g"),this.image),b=b.replace(new RegExp("%category%","g"),this.category),b=b.replace(new RegExp("%title%","g"),this.title)},videoURL:function(){return this.replaceValues(Util.getVideos())+"."+constant.videoType},showVideo:function(){this.doVideoPlayed()}});